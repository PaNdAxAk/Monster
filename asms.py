# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Sun Oct 30 01:19:31 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))