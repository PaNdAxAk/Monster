# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Thu Jun 30 11:59:41 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))