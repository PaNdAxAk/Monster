# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Wed Jun  8 16:29:17 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))