# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Tue Jul 19 22:35:05 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))