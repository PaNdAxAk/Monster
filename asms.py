# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Sat Oct 22 14:56:09 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))