# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Sat Oct 29 00:49:06 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))