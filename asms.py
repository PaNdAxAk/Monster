# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Sun Sep 18 00:33:43 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))