# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Sun Oct 30 01:44:00 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))