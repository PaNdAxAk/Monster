# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Thu Nov 17 00:31:24 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))