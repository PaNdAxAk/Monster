# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Thu Aug 25 15:53:53 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))