# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Sun Jul 17 12:12:18 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))
